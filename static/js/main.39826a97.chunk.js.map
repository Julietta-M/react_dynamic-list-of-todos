{"version":3,"sources":["components/TodoList/TodoList.jsx","api.js","components/CurrentUser/CurrentUser.jsx","App.jsx","index.js"],"names":["TodoList","state","selectedStatus","filteredTitle","handleChange","event","target","value","name","setState","searchedTodos","todo","title","includes","selectedByStatus","completed","this","props","todos","selectUser","filteredTodos","filter","className","placeholder","onChange","map","classNames","key","id","type","readOnly","onClick","userId","React","PureComponent","request","url","fetch","then","response","json","data","CurrentUser","user","loadData","prevProps","a","clearUser","email","phone","App","selectedUserId","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.39826a97.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport './TodoList.scss';\n\nexport class TodoList extends React.PureComponent {\n  state = {\n    selectedStatus: '',\n    filteredTitle: '',\n  }\n\n  handleChange = (event) => {\n    const { value, name } = event.target;\n\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  searchedTodos = (todo) => {\n    if (todo.title === null) {\n      return todo.title;\n    }\n\n    return todo.title.includes(this.state.filteredTitle);\n  }\n\n  selectedByStatus = (todo) => {\n    if (this.state.selectedStatus === 'completed') {\n      return todo.completed;\n    }\n\n    if (this.state.selectedStatus === 'active') {\n      return !todo.completed;\n    }\n\n    return todo;\n  }\n\n  render() {\n    const { todos, selectUser } = this.props;\n    const { selectedStatus, filteredTitle } = this.state;\n    const filteredTodos = todos\n      .filter(this.searchedTodos).filter(this.selectedByStatus);\n\n    return (\n      <div className=\"TodoList\">\n        <h2>Todos:</h2>\n\n        <input\n          className=\"form-control\"\n          name=\"filteredTitle\"\n          value={filteredTitle}\n          placeholder=\"Filter\"\n          onChange={this.handleChange}\n        />\n\n        <select\n          className=\"form-select\"\n          name=\"selectedStatus\"\n          value={selectedStatus}\n          onChange={this.handleChange}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n\n        <div className=\"TodoList__list-container\">\n          <ul className=\"TodoList__list\">\n            {filteredTodos.map(todo => (\n              <li\n                className={classNames(`TodoList__item`,\n                  {\n                    'TodoList__item--unchecked': todo.completed === false,\n                    'TodoList__item--checked': todo.completed === true,\n                  })}\n                key={todo.id}\n              >\n                <label>\n                  <input type=\"checkbox\" readOnly />\n                  <p>{todo.title}</p>\n                </label>\n\n                <button\n                  className=\"\n              TodoList__user-button\n              TodoList__user-button--selected\n              button\n            \"\n                  type=\"button\"\n                  onClick={() => {\n                    selectUser(todo.userId);\n                  }}\n                >\n                  User&nbsp;\n                  {todo.userId}\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      userId: PropTypes.number,\n      title: PropTypes.string,\n      completed: PropTypes.bool,\n    }),\n  ).isRequired,\n  selectUser: PropTypes.func.isRequired,\n};\n","const BASE_URL = 'https://mate-api.herokuapp.com';\n\nexport const request = url => fetch(`${BASE_URL}${url}`)\n  .then(response => response.json())\n  .then(response => response.data);\n\nexport const getTodos = () => request('/todos');\n\nexport const getUser = userId => request(`/users/${userId}`);\n","import React from 'react';\nimport { getUser } from '../../api';\nimport PropTypes from 'prop-types';\n\nimport './CurrentUser.scss';\n\nexport class CurrentUser extends React.PureComponent {\n  state = {\n    user: {},\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.userId !== this.props.userId) {\n      this.loadData();\n    }\n  }\n\n  async loadData() {\n    const user = await getUser(this.props.userId);\n\n    this.setState({ user });\n  }\n\n  render() {\n    const { user } = this.state;\n\n    return (\n      <>\n        { user !== null\n          ? (\n            <div className=\"CurrentUser\">\n              <button\n                className=\"btn btn-outline-danger\"\n                onClick={this.props.clearUser}\n                type=\"button\"\n              >\n                Clear\n              </button>\n              <h2 className=\"CurrentUser__title\">\n                <span>\n                  Selected user:\n                  {user.id}\n                </span>\n              </h2>\n\n              <h3 className=\"CurrentUser__name\">{user.name}</h3>\n              <p className=\"CurrentUser__email\">{user.email}</p>\n              <p className=\"CurrentUser__phone\">{user.phone}</p>\n            </div>\n          )\n          : 'No user found'}\n      </>\n    );\n  }\n}\n\nCurrentUser.propTypes = {\n  userId: PropTypes.number.isRequired,\n  clearUser: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos } from './api';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n  };\n\n  componentDidMount() {\n    getTodos()\n      .then((todos) => {\n        this.setState({ todos });\n      });\n  }\n\n  clearUser = () => {\n    this.setState({ selectedUserId: 0 });\n  }\n\n  render() {\n    const { todos, selectedUserId } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            todos={todos}\n            selectUser={(selectedUserId) => {\n              this.setState({ selectedUserId });\n            }}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                userId={selectedUserId}\n                clearUser={this.clearUser}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}